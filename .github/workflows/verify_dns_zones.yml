# This is a basic workflow to help you get started with Actions

name: Verify and Publish

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: develop

      - name: Get timestamp for serial number
        id: tstamp
        run: echo "::set-output name=date::$(date +%s)"
      
      - name: Debug
        run: |
          echo
      
      - name: Place serial number
        run: |
          cd $GITHUB_WORKSPACE/etc/bind
          sed -i 's/SERIALNUMBERPLACEHOLDER/${{steps.tstamp.outputs.date}}/g' *

      - name: Install bind packages
        run: sudo apt install bind9 bind9utils

      - name: Verify DNS entry validity
        run: $GITHUB_WORKSPACE/scripts/validate.sh
  
      # Create a pull request
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3.8.2
        
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

#       - name: Auto-Merge Pull Request
#         uses: reitermarkus/automerge@v1.5.1
#         with:
#           pull-request: ${{ steps.cpr.outputs.pull-request-number }}

#       - name: close-pull-request
#         uses: davideviolante/pr-automerge-action@v1.2.1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           merge-method: 'squash' # Default 'squash'
#           min-approvals: 2 # Default 2
#           base-ref: 'dev' # Default 'dev'

#       - name: Push the verified zones to main
#         run: |
#           cd $GITHUB_WORKSPACE
#           git commit -a -m "Pushing verified zones ${{steps.tstamp.outputs.date}}"
#           git push
#           git tag -a "v${{steps.tstamp.outputs.date}}" -m "Verified release ${{steps.tstamp.outputs.date}}"
#           git push origin "v${{steps.tstamp.outputs.date}}"
          

name: Verify and Publish
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ develop ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  createpr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Reset Branch To Force Change Detection
        run: |
          git fetch origin develop:develop
          git reset --hard develop
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3.8.2
  verify: 
    needs: createpr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v2
        with:
          ref: create-pull-request/patch
      - name: Install Bind
        run: sudo apt install bind9 bind9utils
      - name: Place Temporary Serial Number
        run: |
          cd $GITHUB_WORKSPACE/etc/bind
          sed -i 's/SERIALNUMBERPLACEHOLDER/1000/g' *
      - name: Verify DNS Entry Validity
        run: $GITHUB_WORKSPACE/scripts/validate.sh
  promote:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - name: Merge and Close PR
        uses: davideviolante/pr-automerge-action@v1.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          merge-method: 'squash'
          min-approvals: 0
          base-ref: 'main'
  release:
    needs: promote
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Generate Timestamp
        id: tstamp
        run: |
          echo "::set-output name=epochdate::$(date +%s)"
          echo "::set-output name=semverdate::$(date +%Y%m%d.%H%M.%S)"
      - name: Place Timestamp As Serial Number
        run: |
          cd $GITHUB_WORKSPACE/etc/bind/
          echo ${{steps.tstamp.outputs.epochdate}}
          cat hitoma.com.db
          sed -i 's/SERIALNUMBERPLACEHOLDER/${{steps.tstamp.outputs.epochdate}}/g' *
          cat hitoma.com.db
      - name: Make Archive
        run: |
          cd $GITHUB_WORKSPACE
          mkdir builds
          tar -czvf builds/zones.tar.gz ./etc
      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: 'DNS Zones v${{ steps.tstamp.outputs.semverdate }}.${{ steps.tstamp.outputs.epochdate }}'
          files: |
            builds/zones.tar.gz
      - name: Timestamp debug
        run: |
          echo ${{steps.tstamp.outputs.epochdate}}
#       - name: Attach File To Release
#         uses: djnicholson/release-action@v2.11
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           release-name: 'DNS Zones v ${{ steps.tstamp.outputs.semverdate }}.${{ steps.tstamp.outputs.epochdate }}'
#           tag-name: 'v${{ steps.tstamp.outputs.semverdate }}.${{ steps.tstamp.outputs.epochdate }}'
#           asset-name: 'zones-v${{ steps.tstamp.outputs.epochdate }}.tar.gz'
#           file: 'builds/zones.tar.gz'
